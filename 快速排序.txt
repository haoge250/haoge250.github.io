1.快速排序的基本思想（基于分治法）
(1)分解：先从数列中取出一个元素作为基准元素。以基准元素为标准，将问题分
解为两个子序列。
(2)治理：对两个子序列快排
(3)合并：将排好序的子序列合并一起，得到原问题解。
2.治理算法设计：
(1)赋初值 i=low,j=high,point=s[low];循环条件是i<j。
(2)从右向左扫描，如果小于point的值，r[i]和r[j]交换，其中r[i]是point。交换后i
要加一。没有找到就j减一，再与point比较。
(3)从左向右扫描，如果大于point的值，r[i]和r[j]交换，其中r[j]是point。交换后j
要减一。没有就找到就i加一，再与point比较。
(4)重复(2)，(3)。直到i和j指针重合，返回该基准元素的下标。
附加：(2)(3)步其实就是就是point与另一个数的交换，后面可以改进。
序列（30<-point，24，5，58，18，36，12，42，39），基准元素这里默认选第一个数。
一次快排后的结果（12，5，24，18）30<-point（58，36，42，39）
3.分解用到递归。根据基准元素分成2个子序列，2个子序列排好基准元素，根据基
准元素再分解，直到i=j时候停止。
4.算法时间复杂度分析
感觉时间复杂度未理解透彻，这里先给出结果最好是O（log(n)）。