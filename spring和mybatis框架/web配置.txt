1.
在Spring框架中是如何解决从页面传来的字符串的编码问题的呢？
下面我们来看看Spring框架给我们提供过滤器CharacterEncodingFilter  这个过滤器就是针对于每次浏览器请求
进行过滤的，然后再其之上添加了父类没有的功能即处理字符编码。  其中encoding用来设置编码格式，forceEn
coding用来设置是否理会 request.getCharacterEncoding()方法，设置为true则强制覆盖之前的编码格式。
    <filter>  
        <filter-name>characterEncodingFilter</filter-name>  <!-- 过滤器名称 -->
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>                   <!-- 过滤器映射 -->
        <filter-name>characterEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  <!--过滤器作用的对象，-->
    </filter-mapping> <!-- /*则客户端请求访问任意资源文件时都要经过过滤器过滤，通过则访问文件，否则拦截。 -->
2.
ContextLoaderListener的作用就是启动Web容器时，自动装配 ApplicationContext.xml的配置信息。
因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认
执行它实现的方法。
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
applicationContext的默认的路径是”/WEB-INF/applicationContext.xml。也可以在web.xml中配置该文件的其他位置，配置如下：
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
3.
使用Spring MVC,配置DispatcherServlet是第一步。DispatcherServlet是前置控制器，配置在web.xml文件中的。
拦截匹配的请求，Servlet拦截匹配规则要自已定义，把拦截下来的请求，依据某某规则分发到目标Controller(我
们写的Action)来处理。
	<servlet>
		<servlet-name>newcar</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!--是启动顺序，让这个Servlet随Servlet容器一起启动。--> 
	</servlet>
	<servlet-mapping>
		<servlet-name>newcar</servlet-name>
		<url-pattern>/</url-pattern>	<!--会拦截URL中带“/”的请求。-->
	</servlet-mapping>
 
